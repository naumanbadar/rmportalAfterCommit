<?xml version="1.0" encoding="utf-8" ?>
<project name="ProActive Grid Cloud Portal" default="war" basedir=".">
	
	<import file="common.xml" />

	<!-- GWT arguments -->
	<property name="port" value="8888" />
	<property name="gwt.args" value="-war ${war.dir}" />

	<target name="javac" description="Compile java source">
		<mkdir dir="${classes.dir}"/>
		<javac srcdir="${src.dir}" includes="**" encoding="utf-8"
			destdir="${classes.dir}" deprecation="on"
			source="1.5" target="1.5" nowarn="true"
			debug="true" debuglevel="lines,vars,source">
			<classpath refid="project.class.path"/>
		</javac>
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
	</target>

	<target name="compile" depends="javac" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="${src.dir}"/>
				<path refid="compile.class.path"/>
				<path refid="project.class.path"/>
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="${gwt.args}"/>
			<arg value="${package.name}.ProActiveGridCloudPortal"/>
		</java>
	</target>

	<target name="run" depends="javac" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="${src.dir}"/>
				<path refid="compile.class.path"/>
				<path refid="project.class.path"/>
			</classpath>
			<jvmarg value="-Xmx256M"/>
			<arg value="-startupUrl"/>
			<arg value="ProActiveGridCloudPortal.html"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="-port ${port}" />
			<arg line="${gwt.args}"/>
			<arg value="${package.name}.ProActiveGridCloudPortal"/>
		</java>
	</target>

	<target name="war" depends="compile" description="Create a war file">
		<mkdir dir="${dist.dir}" />
		<zip destfile="${dist.dir}/ProActiveGridCloudPortal.war" basedir="${war.dir}"/>
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="${classes.dir}" failonerror="false" />
		<delete dir="${test.classes.dir}" failonerror="false" />
		<delete dir="${dist.dir}" failonerror="false" />
		<delete dir="${war.dir}/proactivegridcloudportal" failonerror="false" />
		<delete dir="${reports.dir}" failonerror="false" />
	</target>

	<target name="test.javac" depends="javac" description="Compiles test code">
		<mkdir dir="${test.classes.dir}"/>
		<javac srcdir="${test.src.dir}" includes="**" encoding="utf-8"
			destdir="${test.classes.dir}" deprecation="on"
			source="1.5" target="1.5" nowarn="true"
			debug="true" debuglevel="lines,vars,source">
			<classpath refid="compile.class.path"/>
			<classpath refid="project.class.path"/>
		</javac>
	</target>
  
	<target name="test.dev" depends="test.javac" description="Run development mode tests">
		<mkdir dir="${reports.dev.dir}" />
		<junit fork="yes" printsummary="yes" haltonfailure="yes">
			<jvmarg line="-Xmx256m" />
			<sysproperty key="gwt.args" value="-standardsMode -logLevel WARN" />
			<sysproperty key="java.awt.headless" value="true" />
			<classpath>
				<pathelement location="${test.classes.dir}" />
				<path refid="project.class.path" />
				<path refid="compile.class.path" />
			</classpath>
			<batchtest fork="yes" todir="${reports.dev.dir}">
				<fileset dir="${test.classes.dir}" includes="**/Test*.class" />
			</batchtest>
			<formatter type="plain" />
			<formatter type="xml" />
		</junit>
	</target>

	<target name="test.prod" depends="test.javac" description="Run production mode tests">
		<mkdir dir="${reports.prod.dir}" />
		<junit forkmode="perTest" printsummary="yes">
			<jvmarg line="-Xmx256m" />
			<sysproperty key="gwt.args" value="-prod -standardsMode -logLevel WARN -standardsMode -out www-test" />
			<sysproperty key="java.awt.headless" value="true" />
			<classpath>
				<pathelement location="${test.classes.dir}" />
				<path refid="project.class.path" />
				<path refid="compile.class.path" />
			</classpath>
			<batchtest fork="yes" todir="${reports.prod.dir}" >
				<fileset dir="${test.classes.dir}" includes="**/Test*.class" />
			</batchtest>
			<formatter type="plain" />
			<formatter type="xml" />
		</junit>
	</target>

	<target name="test" description="Run development and production mode tests">
		<antcall target="test.dev" />
		<antcall target="test.prod" />
	</target>
</project>
